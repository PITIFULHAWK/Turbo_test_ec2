
server {
    listen 80; # Listen for incoming HTTP requests on port 80
    listen [::]:80; # Listen for IPv6 HTTP requests

    server_name test.fr.pitifulhawk.xyz; # Replace with your domain and/or EC2 public IP

    # Proxy requests to your Bun.js application running on localhost:3000
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Optional: Serve static files directly from Nginx if your app has a build directory
    # For example, if your frontend build outputs to /home/ec2-user/my-bun-app/frontend/dist
    # location /static/ {
    #     alias /home/ec2-user/my-bun-app/frontend/dist/static/;
    #     expires 30d;
    #     access_log off;
    #     log_not_found off;
    # }

    # Error pages (optional)
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html; # Default Nginx HTML directory
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html; # Default Nginx HTML directory
        internal;
    }
}

server {
    listen 80; # Listen for incoming HTTP requests on port 80
    listen [::]:80; # Listen for IPv6 HTTP requests

    server_name test.http.pitifulhawk.xyz; # Replace with your domain and/or EC2 public IP

    # Proxy requests to your Bun.js application running on localhost:3000
    location / {
        proxy_pass http://localhost:3002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Optional: Serve static files directly from Nginx if your app has a build directory
    # For example, if your frontend build outputs to /home/ec2-user/my-bun-app/frontend/dist
    # location /static/ {
    #     alias /home/ec2-user/my-bun-app/frontend/dist/static/;
    #     expires 30d;
    #     access_log off;
    #     log_not_found off;
    # }

    # Error pages (optional)
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html; # Default Nginx HTML directory
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html; # Default Nginx HTML directory
        internal;
    }
}

server {
    listen 80; # Listen for incoming HTTP requests on port 80
    listen [::]:80; # Listen for IPv6 HTTP requests

    server_name test.ws.pitifulhawk.xyz; # Replace with your domain and/or EC2 public IP

    # Proxy requests to your Bun.js application running on localhost:3000
    location / {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Optional: Serve static files directly from Nginx if your app has a build directory
    # For example, if your frontend build outputs to /home/ec2-user/my-bun-app/frontend/dist
    # location /static/ {
    #     alias /home/ec2-user/my-bun-app/frontend/dist/static/;
    #     expires 30d;
    #     access_log off;
    #     log_not_found off;
    # }

    # Error pages (optional)
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html; # Default Nginx HTML directory
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html; # Default Nginx HTML directory
        internal;
    }
}